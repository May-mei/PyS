CSS层叠样式表
1.使用css样式的方式
	HTML<!DOCTYPE>声明标签
		定义和用法
			<!DOCTYPE>声明必须是HTML文档的第一行，位于<html>标签之前
			<!DOCTYPE>声明不是HTML标签；它是指示web浏览器关于页面使用哪个html版本进行编写的指令
			在html4.01中，<!DOCTYPE>声明引用DTD，因为HTML4.01基于SGML。
			DTD规定了标记语言的规则，这样浏览器才能正确的呈现内容。
			html5不基于SGML，所以不需要引用DTD。
		各版本的声明
			html5
				<!DOCTYPE html>
				<meta charset="utf-8">
			html4.01
				<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
				该DTD包含所有HTML元素和属性，包括展示性的和弃用的元素（比如font）。不允许框架集（frameset/）
				<meta http-equiv=Content-Type content="text/html;charset=utf-8">
				注意的规则：
					单标记必须闭合 比如<br>必须写成<br/>
					单属性必须添加属性值
					标记和属性必须使用小写
					属性的属性必须使用""
	内链样式表
		<body style="background-color:green;margin:0;padding:0;"></body>
	嵌入式样式表
		<style  type="text/css"></style>
		需要将样式放在<head></head>
	引入式样式表
		需要将样式放在<head></head>
		<link rel="StyleSheet" type="text/css" href="style.css">
2.定义样式表
	html标记定义
		<p>...</p>
			p{属性:属性值;属性1:属性值1}
			p可以叫做选择器，定义那个标记中的内容执行其中的样式
			一个选择器可以控制若干个样式属性，他们之间需要用英语的";"隔开，最后一个不用加";"
	Class定义
		<p class="p">...</p>
			class定义是以":"开始
			.p{属性:属性值；属性1:属性值1}
	ID定义
		<p id="p">...</p>
			ID定义是"#"开始的
			#p{属性:属性值；属性1:属性值1}
	优先级问题
		ID>Class>HTML
		同级时选择离元素最近的一个的(页面从上到下，越下面越近)
			#p{color:#f60}
			执行颜色为#f60的
	组合选择器（同时控制多个元素）
		h1,h2,h3{font-size:14px;color:red;}
		选择器组合可以使用";"隔开
	伪元素选择器
		a:link 正常连接的样式
		a:hover 鼠标放上去的样式
		a:active 选择链接时的样式
		a:visited  已经访问过的链接的样式
3.	常见属性
	颜色属性
		color属性定义文本的颜色
			color:green
			color:#ff6600 简写式 color:#f60
			color:rgb(255,255,255)  红(R)、绿(G)、蓝(B)每个的取值范围0-255
			color:rgba(255,255,255,1) GRBA是代表Red(红色) Green(绿色) Blue(蓝色)和Alpha的(色彩空间)	透明	
	字体属性
		font-size字体大小
			px：设置一个固定的值
			%：父元素的百分比
			smaller：比父元素更小
			larger：比父元素更大
			inherit：继承父元素的
		font-family定义字体
			font-family：微软雅黑，seif
			可以使用","隔开，以确保当字体不存在的时候直接使用下一个
		font-weight字体加粗
			normal(默认值)、bold(粗)、bolder(粗)、lighter(更细)
			400=normal，而700=bold 100、 200、 300~900
		font-style字体样式
			normal：正常
			italic：斜体
			oblique：倾斜
			inherit：继承
		font-variant 小型大写字母显示文本	
			normal：标准
			small-caps：小型大写字母显示文本
			inherit：继承
	背景属性
		background-color：背景颜色
		background-image：背景图片
			background-image:url(图片路径)
			background-image:none
		background-repeat:背景重复
			repeat：重复平铺满
			repeat-x：向X轴重复
			repeat-y：向Y轴重复
			no-repeat：不重复
		background-position：背景位置
			left、center、right：横向
			top、center、bottom：纵向
			用数值来表示位置
		简写方式
			background：#f60 url(image/arr.gif) no-repeat top center
	文本属性
		text-align:横向排列
			left，center，right
		line-height:文本行高
			%基于字体大小的百分比行高
			数值 来设置固定值
			
		text-indent:首行缩进
			%父元素的百分比
			px固定值，默认0
			inherit继承
		letter-spacing:字符间距
			normal:默认
			length:设置具体的数值（可以设置负值）
			inherit：继承
		word-spacing:单词间距
			normal:默认
			px:固定值
			inherit：继承
		direction:文本方向
			ltr:从左到右 默认值
			rtl:从右到左
			inherit：继承
		text-transform:文本大小写
			none:默认
			capitalize：每个单词以大写字母开头
			uppercase：定义仅有大写字母
			lowercase：定义无大写字母，仅有小写字母
			inherit：规定应该从父元素继承text-transform属性的值
	边框属性
		边框风格 border-style
			border-style 统一风格（简写风格）
			单独定义某一方向的边框样式
				border-bottom-style:下边框样式
				border-top-style:上边框样式
				border-left-style:左边框样式
				border-right-style:右边框样式
			边框风格样式的属性值
				none无边框
				solid直线边框
				dashed虚线边框
				dotted点状边框
				double双线边框
				groove凸槽边框    groove ridge inset outset这四个依托border-color的属性值
				ridge垄状边框
				inset inset边框
				outset outset边框
				inherit继承
		边框宽度border-width
			统一风格：border-width
			单独风格：
				border-top-width:上边边框宽度
				border-bottom-width:下边边框宽度
				border-left-width:左边边框宽度
				border-right-width:右边边框宽度
			边框宽度的属性值
				thin 细边框
				medium 中等边框
				thick 粗边框
				px 固定值的边框
				inherit 继承
		边框颜色 border-color
			统一风格：border-color
			单独风格： 
				border-top-color 上边框颜色
				border-bottom-color 下边框颜色
				border-left-color 左边框颜色
				border-right-color 右边框颜色
			属性值
				RGB：rgb(255,255,0)
				RGBA: rgba(255,255,0,0.1)
				十六进制：#ff0
				继承inherit
			属性值的四种情况
				一个值：border-color（上、下、左、右）
				两个值：border-color（上下、左右）
				三个值：border-color（上、（左、右）、下）
				四个值：border-color（（上）、（右）、（下）、（左））
		简写方式
			border:solid 2px #f60
	列表属性
		标记的类型
			list-style-type
				none：无标记
				disc：默认。标记是实心圆
				square：标记是实心方块
				decimal：标记是数字
				decimal-leading-zero：0开头的数字标记
				lower-roman：小写罗马数字
				upper-roman：大写罗马数字
				lower-alpha：小写英文字母
				upper-alpha：大写英文字母
				hebrew：传统的希伯来编号方式
				georgian：传统的乔治亚编号方式
				cjk-ideographic：简单的表意数字
				hiragana：标记是：a,i,u,e,o,ka,ki
				katakana：标记是：A,I,U,E,O,KA,KI等
				hiragana-iroha：标记是i,ro,ha,ni,ho,he,to等
				katakana-iroha：标记是I,RO,HA,NI,HO,HE,TO等
		标记的位置
			list-style-position：
				inside：列表项目标记放置在文本以内，且环绕文本根据标记对齐
				outside：默认值。保持标记位于文本的左侧。列表项目标记放置在文本以外，且环绕文本不根据标记对齐。
				inherit：规定应该从父元素继承list-style-position属性的值。
		设置图像列表标记
			list-style-image：
				url：图像的路径
				none：默认。无图形被显示
				inherit：规定应该从父元素继承list-style-image属性的值。
		简写方式
			list-style：
				list-style:square inside url('/i/arrow.jpg')
4.DIV+CSS布局
	div和span
		div和span在整个html标记中，没有任何意义，他们的存在就是为了应用css样式
		div和span的区别在于，span是内联元素，div是块级元素
	盒模型
		margin:盒子外边距
		padding：盒子内边距
		border：盒子边框宽度
		width：盒子宽度
		height：盒子高度
	布局相关的属性
		position定位方式
			relative：正常定位
			absolute：根据父元素进行定位
			fixed：根据浏览器窗口进行定位
			static：没有定位
			inherit：继承inherit
		定位
			left(左)、right(右)、top(上)、bottom(下)：离页面顶点的距离
		z-index 层覆盖先后顺序
		display显示属性
			none:层不显示
			block:块状显示，在元素后面换行，显示下一个块元素
			inline:内联显示，多个块可以显示在一行内
		float浮动属性
			left:左浮动
			right:右浮动
		clear清除浮动
			clear:both
		overflow溢出处理
			hidden:隐藏超出层大小的内容
			scroll:无论内容是否超出层大小都添加滚动条
			auto:超出时自动添加滚动条
	兼容问题
		兼容性测试工具
			IE Tester
			Multibrowser
		常用的浏览器
			Google Chrome
			Firefox
			opera
		高效的开发工具
			轻量级
				notepad++
				sublime text
				记事本
			重量级
				webstorm
				Dreamweaver	
		网页设计工具
			fireworks
			photoshop
		判断IE的方法
			
	《DIV+CSS网页布局实战》
		
	
	